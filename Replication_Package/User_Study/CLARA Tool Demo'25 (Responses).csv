Timestamp,Please Enter your Email,"After reviewing CLARA's suggestions, do you think the tool provided accurate and helpful summaries and explanations for the overall code as well as for individual code fragments? ","Please explain your answer (why yes, no, or unsure?)",Do you agree that CLARA effectively captures the broader context of a code file within its repository in its explanation summary?,How easy is it to understand CLARAâ€™s explanations of the code files and the selected code fragments within the files?,Please elaborate on your answer (Optional):,"After reviewing CLARA's suggestions, do you think the tool provided useful and reusable refactored version of the code? ","Please explain your answer (why yes, no, or unsure?)",How clear and understandable do you find the refactored code provided by CLARA compared to the original version?,Please elaborate on your answer (Optional):,"After reviewing CLARA's suggestions, do you think the tool provided accurate predictions of code quality attributes? ","Please explain your answer (why yes, no, or unsure?)",How helpful do you find the detected code quality attributes provided by CLARA?,Please elaborate on your answer (Optional):,"How easy or difficult did you find CLARA to use, in terms of its overall user-friendliness? ",Please provide any suggestions for improving CLARA's Graphical User Interface (If any),"Overall, how accurate were the suggestions for CLARA's three features?",Please explain your answer (Optional):,How helpful do you think CLARA is to assist developers and researchers in exploring and analyzing open-source codebases?,Please specify the reason for your answer:,"Do you agree that CLARA can help developers and researchers save time and effort in analyzing code files and understanding code explanations while exploring open-source GitHub repositories, compared to using third-party generative AI models or IDE-based tools?  ",Do you agree that the combination of the three features in CLARA simplifies the code exploration and analysis workflow in open-source GitHub repositories?,How responsive is CLARA in providing suggestions for the three features?,What additional functionality/feature (if any) would you like to see in CLARA in the future?,Please provide any (other) recommendations to improve CLARA (Optional):,Please indicate your current professional affiliation or role:,How many years of professional experience do you have in this role?  
7/16/2025 3:09:14,prodipta.s@samsung.com,Yes,I have got a decent overview and summary of the portion of the code that I selected. The summary is quite understandable and portray the functionality of the code.,Completely agree,Very easy,The answer provided by the extension is given in simple language that helps me understand the context easily.,Yes,"I have got necessary and effective refactored code. Though it needs more improving, but it serves primary purpose. ",Very clear and understandable,The comments of the refactored part are helpful to understand the changes. The summary of the changes can also be understood by asking questions in the chatbot.,Unsure,"The answers given by the chatbot are not stable. Some values of the attributes given by the tool match with the expected ones, but some do not align with the expected values. ",Moderately helpful,It gives an overview of the code quality. It helps to take decision if we should use the code for our purposes or avoid it.,Very easy,"The UI needs improving, plus I need to reload every time if the prop goes away. Please provide a small icon to navigate again. ",Moderately accurate,"It gives a quite good experience while refactoring code. I have also got good and effective code explanation summary. Though it needs improving for increasing accuracy while giving answers of the code quality attributes, it is a very impactful and novel feature.  ",Moderately helpful,"It saves some time as I don't need to roam between AI chatbots (ChatGpt, deepseek etc.). Again, the context of the codebase is automatically explained to this tool, I think. So, I need not explain my codebases to it like I do to other AI assistants.",Completely agree,Completely agree,Very responsive,"AI-assisted bug detection in the code files & potential fixes, Code documentation generation, Cross-file dependency & reference mapping",Please provide more user-friendly UI.,"Industry Developer / Practitioner (e.g., software engineer, technical lead)",4
7/16/2025 21:17:10,tasmia.zerin@cefalo.com,Yes,"The tool helps to get the context of the whole file at a glance, including a short summary for each of the functions defined in the file. Selecting a code fragment offers a detailed explanation for that part.",Completely agree,Very easy,,Yes,"It refactored well, but in some places it put unnecessary comment, where the line wasn't even changed. Additionally, there was 'catch' missing after the try block, which will eventually throw an error while running the code.",Very clear and understandable,,Yes,The model sometimes gives slightly different results,Very helpful,Most of the attributes show N/A,Very easy,"Make the chatbox size bigger, and there is an unnecessary white box between the top box and AI question field which needs to be removed.",Very accurate,,Very helpful,"It is very easy to use and responsive, which saves time to move to an IDE or any other AI tool.",Completely agree,Completely agree,Very responsive,"AI-assisted bug detection in the code files & potential fixes, Unit test generation, Code documentation generation, Cross-file dependency & reference mapping",,"Industry Developer / Practitioner (e.g., software engineer, technical lead)",3
7/18/2025 16:24:47,AbuJafar.Saifullah@optimizely.com,Yes,I tested it against other repos as well where I had context. It seemed to do fine like this repo. So I am confident about this,Completely agree,Neutral,"The UI needs to be better in order to comprehend the answer provided by CLARA. It's very hard to understand right now. But if I am judging by the default answer provided, it does a fairly good job",Unsure,"Like I said before, it's very hard to comprehend. Also it didn't provide me on the summary that is being showcased above

What refactoring changes were made:
Removed duplicate and incomplete method declarations (updateConfig, tablesOrDataChanged, tryParseSql).
Organized method scopes and logic blocks properly for readability and correctness.
Applied clear method separation and consistent formatting.
Ensured safe use of shared state (sqlCaches) and added null/validation safety hints.
-------------------------------------------------------------------------------------------------------------------------------------------------

",Neutral,"It seems understandable, as the code is properly documented. But it needs to be formatted properly for a user to comprehend and understand it better",Yes,Seems okay.,Very helpful,,Very easy,usage of Axiom Design System please. It's open source,Very accurate,,Very helpful,"I like how intuitive it is. I think, it can get better",Completely agree,Completely agree,Very responsive,"AI-assisted bug detection in the code files & potential fixes, Unit test generation, Analysis and summarization of commits and pull requests, Cross-file dependency & reference mapping",,"Industry Developer / Practitioner (e.g., software engineer, technical lead)",3
7/19/2025 0:18:15,bsse1112@iit.du.ac.bd,Yes,It kept the whole context and told precise answer to understand that part ,Somewhat agree,Very easy,"I got that within a single paragraph, slightly hard to understand for that",Yes,the refactoring was good but the chatbot didn't provide clear answers on the followup questions,Moderately clear and understandable,I would like to get something with keypoints too.,Yes,I think that's correct and getting a idea regarding that file and portion. Very useful!,Very helpful,I can predict my efforts for refactoring on that file,Moderately easy,"Answers in keypoint, better UI",Moderately accurate,I got something that it's AI didn't understand the context,Moderately helpful,I already mentioned in previous pages,Somewhat agree,Somewhat agree,Very responsive,"AI-assisted bug detection in the code files & potential fixes, Unit test generation",,"Academic Researcher (e.g., professor, postdoctoral fellow, PhD student)",3
7/19/2025 22:37:57,mhasan02@wm.edu,Yes,"It clearly identifies the selected portion of the summary and make an explanation of it. However, explanation could be improved by simplification.",Somewhat agree,Very easy,,Yes,I got a refactored version of the code which was fine but the descriptive comments were obscure,Moderately unclear and difficult to understand,"I tested a file named ""file2.c,"" but it produced the exact same code despite claiming to be refactored.",Yes,maintainability index varies 10-15% for the same code.,Neutral,,Moderately easy,"Instead of a code repository, features like refactoring and explanations could be more beneficial to users directly within the code editor.",Very accurate,,Moderately unhelpful,"It still explains and summarizes at the file level, but no connections have been made in the context of the entire project.",Completely agree,Completely agree,Moderately responsive,"Code documentation generation, Analysis and summarization of commits and pull requests",,"Academic Researcher (e.g., professor, postdoctoral fellow, PhD student)",4
7/19/2025 23:52:46,bsse1132@iit.du.ac.bd,Yes,"the overview is good and when I selected a part of the code and asked for explanation, it explained correctly",Moderately agree,Moderately easy,,No,I don't think I got useful refactored code there,Moderately clear and understandable,,Yes,it just did,Moderately helpful,,Very easy,the back button in the beginning should be sticky. Many users might not find it by scrolling.,Neutral,,Very helpful,It's nice and easy to use,Completely agree,Somewhat agree,Moderately responsive,"AI-assisted bug detection in the code files & potential fixes, Code documentation generation, Analysis and summarization of commits and pull requests",,"Academic Researcher (e.g., professor, postdoctoral fellow, PhD student)",2
7/20/2025 2:21:07,shafiq.u@samsung.com,Yes,"Yes, because all the parts I marked have successfully been summarized. So it works well for individual fragments especially, why I might use it.",Completely agree,Moderately easy,,Yes,"Yes, because it did follow basic rules of refactoring of codes. So obviously it means less smell.",Very clear and understandable,,Yes,"Yes, it did. Although it would be better if we could visualize more regarding how these attributes were calculated. It would be interesting this way. Or maybe warning or suggestions like ""Reduce method size"" or something to achieve good attribute",Moderately helpful,,Very easy,"I think the height of the tool interface could be a bit longer as I have to scroll through a lot. 
Instead of putting chatbot assistant below, maybe it can come from the side. 
Sometimes I don't see ask chatbot or back button at all as I have to scroll down fully. Maybe it can be made as sticky.",Very accurate,,Very helpful,"I think it's going to be helpful because especially mark to explain feature. I would very much like to have it. As it has the context of the whole file, my marked portion would be easily explained using that context. That would be helpful for me. For refactoring part, it's cool but I would want to know what type of refactoring is happening under the hood so that I can improve my coding as well. So that would be my overall suggestion to work on!",Completely agree,Completely agree,Very responsive,"AI-assisted bug detection in the code files & potential fixes, Analysis and summarization of commits and pull requests","1. Analysis of how the refactoring was done
2. How code attributes were calculated, maybe visualize
3. Improve the answers readability by providing colors or explaining line by line especially for the feature ""Mark to explain""
","Academic Researcher (e.g., professor, postdoctoral fellow, PhD student), Industry Developer / Practitioner (e.g., software engineer, technical lead)",3
7/20/2025 12:33:10,asaha02@wm.edu,Yes,I got some really helpful suggestions,Completely agree,Moderately easy,,Yes,It provided reuseable refactored code,Very clear and understandable,,Unsure,It provided mostly accurate predictions,Very helpful,,Very easy,,Moderately accurate,,Very helpful,Developers and researchers can refactor and analyze their code very eaily using CLARA.,Completely agree,Completely agree,Moderately responsive,"Code documentation generation, Cross-file dependency & reference mapping",,"Academic Researcher (e.g., professor, postdoctoral fellow, PhD/MSc student)",8
7/20/2025 12:37:21,bsse1123@iit.du.ac.bd,Yes,"yes, it was helpful, accurate to some extent ",Completely agree,Very easy,,Yes,"yes, helpful ",Moderately clear and understandable,,Unsure,some of the answers weren't expected,Very helpful,,Very easy,,Very accurate,,Very helpful,easy to use to understand and correct code. ,Completely agree,Completely agree,Very responsive,"AI-assisted bug detection in the code files & potential fixes, Code documentation generation, Analysis and summarization of commits and pull requests, Cross-file dependency & reference mapping",,"Academic Researcher (e.g., professor, postdoctoral fellow, PhD/MSc student)",3
7/20/2025 21:05:36,bsse1102@iit.du.ac.bd,Yes,These tool puts chatgpt on the fingertip and reduces a layer of friction from the normal code exploration process.,Somewhat agree,Very easy,,Yes,"Even on complexer and larger code, the tool is not hampered by context window size and actually helps us to understand the relationship between modules and even explains on the granular level.",Very clear and understandable,,Yes,"ChatGpt is already very good on these tasks and due to using it in the backend, this tool also performs competantly.",Very helpful,,Very easy,The output is very bland and there are some empty places here and there which looks bad. The output window should have a mechanism to convert the markdown output into html to make the output look better than raw markdown. also the clara window hovers over a large portion of the window. it should be collapseable.,Very accurate,,Very helpful,"in large open source projects, when someone new wants to contribute, understanding the existing codebase can be very helpful. this toool is very helpful in that, specially due to its integration with github.",Completely agree,Completely agree,Very responsive,"Analysis and summarization of commits and pull requests, Cross-file dependency & reference mapping",,"Academic Researcher (e.g., professor, postdoctoral fellow, PhD/MSc student)",2
7/23/2025 12:33:39,debobratac821@gmail.com,Yes,"The explanation provides a concise summary of each methodâ€™s purpose which is appropriate for documentation or code review. However, it does not go into implementation details during the overall code explanation which is also okay. ",Somewhat agree,Very easy,"I think when providing explanations for segmented or selected code, it is also important for CLARA to consider the overall context of the codebase to answer ,not just based on the snippet.  If CLARA only looks at the selected portion, it may sometime miss important details.",Yes,"The refactoring is mostly in structural sector. It does not introduce new algorithms or optimize performance, but it does make the code easier to understand and maintain.",Moderately clear and understandable,,Unsure,.,Neutral,,Moderately easy,"Using bold or boxed text can help users quickly spot important information, changes, or recommendations in CLARA output.

Clearly marking (color/underline) which lines are changed or added during refactoring will help users quickly understand 

check Fitt's law, and Jakob's law",Moderately accurate,,Very helpful,.,Completely agree,Somewhat agree,Moderately responsive,"AI-assisted bug detection in the code files & potential fixes, Code documentation generation, Cross-file dependency & reference mapping",,"Industry Developer / Practitioner (e.g., software engineer, technical lead)",1